# -*- Mode: Python -*-

fbsd_env = Environment(CFLAGS = '-g -O1 -fno-strict-aliasing -ffreestanding -std=c99 ',
                       CPPPATH = ['#compat-freebsd/include-override', '#compat-freebsd/include', '#compat-freebsd/common'],
                       CPPDEFINES = ['_KERNEL', '__FreeBSD__']
                       )

build_fbsd = True

if not FindFile('UPDATING', Dir('#contrib/freebsd')):
    print("FreeBSD source is not available. Not building FreeBSD drivers.")
    print("Use 'git submodule update --init' to fetch FreeBSD sources.")
    build_fbsd = False

# Debugging

# Use something like this to run kmod-info:
# LD_LIBRARY_PATH=$PWD/common ./kmod-info /dev/vfio/5 0000:00:19.0 ./em/libif_em.so
if build_fbsd:
    Program('kmod-info', ['kmod-info.c'],
            CFLAGS    = '-g -std=c99  -Wno-trampolines ',
            # To get vfio.h
            CPPPATH   = ['/usr/src/linux/include'],
            LIBS = ['fbsd_common'],
            LIBPATH = ['common'],
            LINKFLAGS = ' -ldl ')

# Subdirectories

if build_fbsd:
    SConscript(dirs = ['common', 'em'],
               exports = ['fbsd_env'])

# EOF
